---
title: "AE 05: Tidying StatSci Majors"
author: "James Turner"
date: today
format: html
---

## Goal

Our ultimate goal in this application exercise is to make the following data visualization.

![](images/statsci-plot.png){fig-alt="Line plot of numbers of Statistical Science majors over the years (2011 - 2021). Degree types represented are BS, BS2, AB, AB2. There is an increasing trend in BS degrees and somewhat steady trend in AB degrees." fig-align="center"}

## Data

The data come from Duke's Office of the University Registrar. The data were downloaded from Duke as a PDF file. The data have been exported to a CSV file for you. Let's load that in.

```{r}
#| label: load-packages-data
#| message: false

library(tidyverse)

statsci <- read_csv("data/statsci.csv")
```

And let's take a look at the data.

```{r}
statsci
```

## Pivoting

-   **Demo:** Pivot the `statsci` data frame *longer* such that each row represents a degree type / year combination and `year` and `n`umber of graduates for that year are columns in the data frame.

```{r}
#| label: pivot
statsci_pivot <- statsci |>
  pivot_longer(!degree, names_to = "year", values_to = "num_graduates", cols_vary = "fastest")
  
statsci_pivot
```

-   **Question:** What is the type of the `year` variable? Why? What should it be?

***Answer:*** The year variable is a character type because as the original titles of the columns they did not have any numerical value. I would argue that these likely should remain characters in most situations since the years are not numerical values that we would perform math on for example. Switching them to numerical values may allow for multiplication of a number by its year, but the output of that would likely make no sense from a practical perspective. However, there are some situations where its numerical value would be important (such as wanting to plot data points on a line plot with the year values on one axis like as the one we will be recreating in this assignment). So in this case we need to make it a numerical variable.

-   **Demo:** Start over with pivoting, and this time also make sure `year` is a numerical variable in the resulting data frame.

```{r}
#| label: pivot-with-transform

statsci_pivot_num <- statsci |>
  pivot_longer(!degree, names_to = "year", names_transform = list(year= as.integer), values_to = "num_graduates", cols_vary = "fastest")
  
statsci_pivot_num
```

-   **Question:** What does an `NA` mean in this context? *Hint:* The data come from the university registrar, and they have records on every single graduates, there shouldn't be anything "unknown" to them about who graduated when.

***Answer:*** In this case an NA is most likely indicating that there were no graduates from that program in that year.

-   **Demo:** Add on to your pipeline that you started with pivoting and convert `NA`s in `n` to `0`s.

```{r}

#| label: convert-na

statsci_pivot_num <- statsci |>
  pivot_longer(
    !degree,
    names_to = "year",
    names_transform = list(year= as.integer),
    values_to = "num_graduates",
    cols_vary = "fastest"
  ) |>
  replace(is.na(statsci_pivot_num), 0)
  
statsci_pivot_num
```

-   **Demo:** In our plot the degree types are BS, BS2, AB, and AB2. This information is in our dataset, in the `degree` column, but this column also has additional characters we don't need. Create a new column called `degree_type` with levels BS, BS2, AB, and AB2 (in this order) based on `degree`. Do this by adding on to your pipeline from earlier.

```{r}
#| label: degree-type

statsci_degree_type <- statsci |>
  pivot_longer(
    !degree,
    names_to = "year",
    names_transform = list(year= as.integer),
    values_to = "num_graduates",
    cols_vary = "fastest"
  ) |> 
  mutate(num_graduates = if_else(is.na(num_graduates), 0, num_graduates)) |>
  separate_wider_delim(degree, delim = "(", names = c("major", "degree_type")) |>
  mutate(
    degree_type = str_remove(degree_type, "\\)"),
    degree_type = fct_relevel(degree_type, "BS", "BS2", "AB", "AB2")
  )
  
statsci_degree_type
```

-   **Your turn:** Now we start making our plot, but let's not get too fancy right away. Create the following plot, which will serve as the "first draft" on the way to our [Goal]. Do this by adding on to your pipeline from earlier.

![](images/statsci-plot-draft.png){fig-alt="Line plot of numbers of Statistical Science majors over the years (2011 - 2021). Degree types represented are BS, BS2, AB, AB2. There is an increasing trend in BS degrees and somewhat steady trend in AB degrees." fig-align="center"}

```{r}
#| label: plot-draft

ggplot(
  statsci_degree_type, aes(x = year,
                           y = num_graduates,
                           color = degree_type,
                       )) +
  geom_point() +
  geom_line()
  
 
```

-   **Your turn:** What aspects of the plot need to be updated to go from the draft you created above to the [Goal] plot at the beginning of this application exercise.

We need to re-label everything (Title, axes, legend, etc.), change the theme to get rid of the grey background, change line colours, etc.

-   **Demo:** Update x-axis scale such that the years displayed go from 2011 to 2023 in increments of 2 years. Do this by adding on to your pipeline from earlier.

```{r}
#| label: plot-improve-1

ggplot(
  statsci_degree_type, aes(x = year,
                           y = num_graduates,
                           color = degree_type,
                       )) +
  geom_point() +
  geom_line() +
  scale_x_continuous(breaks = seq(2011, 2023, 2))
  
```

-   **Demo:** Update line colors using the following level / color assignments. Once again, do this by adding on to your pipeline from earlier.
    -   "BS" = "cadetblue4"

    -   "BS2" = "cadetblue3"

    -   "AB" = "lightgoldenrod4"

    -   "AB2" = "lightgoldenrod3"

```{r}
#| label: plot-improve-2

ggplot(
  statsci_degree_type, aes(x = year,
                           y = num_graduates,
                           color = degree_type,
                       )) +
  geom_point() +
  geom_line() +
  scale_x_continuous(breaks = seq(2011, 2023, 2)) +
  scale_color_manual(
    values = c("BS" = "cadetblue4",
               "BS2" = "cadetblue3",
               "AB" = "lightgoldenrod4",
               "AB2" = "lightgoldenrod3"
    )) 
  
```

-   **Your turn:** Update the plot labels (`title`, `subtitle`, `x`, `y`, and `caption`) and use `theme_minimal()`. Once again, do this by adding on to your pipeline from earlier.

```{r}
#| label: plot-improve-3

ggplot(
  statsci_degree_type, aes(x = year,
                           y = num_graduates,
                           color = degree_type,
                       )) +
  geom_point() +
  geom_line() +
  scale_x_continuous(breaks = seq(2011, 2023, 2)) +
  labs(
    y = "Number of majors graduating",
    x = "Graduation year",
    title = "Statistical Science majors over the years",
    subtitle = "Academic years 2011 - 2023",
    caption = "Source: Office of the University Registrar
https://registrar.duke.edu/registration/enrollment-statistics"
  ) +
  scale_color_manual(
    values = c("BS" = "cadetblue4",
               "BS2" = "cadetblue3",
               "AB" = "lightgoldenrod4",
               "AB2" = "lightgoldenrod3"
    )) +
  theme_minimal() +
  theme(
    legend.position.inside = c(0.2, 0.8),
    legend.background = element_rect(fill = "white", colour = "gray")
  )
```

-   **Demo:** Finally, adding to your pipeline you've developed so far, move the legend into the plot, make its background white, and its border gray. Set `fig-width: 7` and `fig-height: 5` for your plot in the chunk options.

```{r}
#| label: plot-improve-4
#| fig_width: 7
#| fig_height: 5

ggplot(
  statsci_degree_type, aes(x = year,
                           y = num_graduates,
                           color = degree_type,
                       )) +
  geom_point() +
  geom_line() +
  scale_x_continuous(breaks = seq(2011, 2023, 2)) +
  labs(
    y = "Number of majors graduating",
    x = "Graduation year",
    title = "Statistical Science majors over the years",
    subtitle = "Academic years 2011 - 2023",
    caption = "Source: Office of the University Registrar
https://registrar.duke.edu/registration/enrollment-statistics"
  ) +
  scale_color_manual(
    values = c("BS" = "cadetblue4",
               "BS2" = "cadetblue3",
               "AB" = "lightgoldenrod4",
               "AB2" = "lightgoldenrod3"
    )) +
  theme_minimal() +
  theme(
    legend.position = c(0.2, 0.8), #Adding legend.position.inside ended up moving it outside the plot
    legend.background = element_rect(fill = "white", colour = "gray")
  )
```
